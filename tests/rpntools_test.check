#include "../defs.h"
#include "../rpntools.h"
#include "../errors.h"

#test checkSanity_test
   ck_assert_int_eq(checkSanity("(a+b)*(a^c)", INFIX_RULES), 0);
   ck_assert_int_eq(checkSanity(")a-b(", INFIX_RULES), ERR_PARENTHESIS_UNBALANCED);
   ck_assert_int_eq(checkSanity("ab+", RPN_RULES), 0);

#test RPNtoInfix_test
   ck_assert_str_eq(RPNtoInfix("ab+"), "(a+b)");
   ck_assert_str_eq(RPNtoInfix("ag+ba-c+cedf^*+^*"), "((a+g)*(((b-a)+c)^(c+(e*(d^f)))))");
   ck_assert_str_eq(RPNtoInfix("ab+c*d^"), "(((a+b)*c)^d)");
   ck_assert_str_eq(RPNtoInfix("a+b"), "");
   ck_assert_int_eq(getError(ERR_UNBALANCED_EXPRESSION), TRUE);
   ck_assert_str_eq(RPNtoInfix("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa+"), "");
   ck_assert_int_eq(getError(ERR_STACK_OVERFLOW), TRUE);
   ck_assert_str_eq(RPNtoInfix("+ab"), "");
   ck_assert_int_eq(getError(ERR_UNBALANCED_EXPRESSION), TRUE);
   ck_assert_str_eq(RPNtoInfix("a++"), "");
   ck_assert_int_eq(getError(ERR_UNBALANCED_EXPRESSION), TRUE);
   ck_assert_str_eq(RPNtoInfix("++"), "");
   ck_assert_int_eq(getError(ERR_UNBALANCED_EXPRESSION), TRUE);

#test getRPN_test

