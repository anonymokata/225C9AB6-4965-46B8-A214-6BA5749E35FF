#include "../defs.h"
#include "../rpntools.h"

#test checkMatchingParenthesis_test
   ck_assert_int_eq(checkMatchingParenthesis("()"), OK);
   ck_assert_int_eq(checkMatchingParenthesis("(()"), NOK);
   ck_assert_int_eq(checkMatchingParenthesis("((a+b)*(c+d))"), OK);
   ck_assert_int_eq(checkMatchingParenthesis("((a+b)*(c+d)))"), NOK);
   ck_assert_int_eq(checkMatchingParenthesis("((a+b)"), NOK);
   ck_assert_int_eq(checkMatchingParenthesis("(((a+b)*(c+d))))"), NOK);
   ck_assert_int_eq(checkMatchingParenthesis(")("), NOK);

#test isLowerCaseLetter_test
   ck_assert_int_eq(isLowerCaseLetter('A'), NOK);
   ck_assert_int_eq(isLowerCaseLetter('a'), OK);
   ck_assert_int_eq(isLowerCaseLetter('$'), NOK);

#test isAllowedOperator_test
   ck_assert_int_eq(isAllowedOperator('+'), OK);
   ck_assert_int_eq(isAllowedOperator('/'), OK);
   ck_assert_int_eq(isAllowedOperator('-'), OK);
   ck_assert_int_eq(isAllowedOperator('*'), OK);
   ck_assert_int_eq(isAllowedOperator('^'), OK);
   ck_assert_int_eq(isAllowedOperator('@'), NOK);


#test infix_checkValidChars_test
   ck_assert_int_eq(checkValidChars("(a+b)", INFIX_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("a+b+3", INFIX_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("$$a+b+3", INFIX_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("(a+b ) ", INFIX_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("3+3", INFIX_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("A+B", INFIX_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("FOO_*", INFIX_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("+3", INFIX_RULES), VALID_CHARPOS);

#test rpn_checkValidChars_test
   ck_assert_int_eq(checkValidChars("ab+", RPN_RULES), VALID_CHARPOS);
   ck_assert_int_eq(checkValidChars("abc*^", RPN_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("(a+b)", RPN_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars(" ab++ ", RPN_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("(A+B)", RPN_RULES), VALID_CHARPOS);
   ck_assert_int_ne(checkValidChars("*AB", RPN_RULES), VALID_CHARPOS);
